!<Experiment>
name: HIGGS-1M
filename: /home/ubuntu/frydatom-vylet-2016/data/HIGGS_1M.csv
models:
  ens: !<SLModelConfig>
      name: H2O Ensemble
      params_grid:
          family: [binomial]
          learner: [[h2o.glm.wrapper, h2o.randomForest.1,  h2o.gbm.1, h2o.deeplearning.1]]
          cvControl: [V: 10]
  deeplearning: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.deeplearning.H2ODeepLearningEstimator ''
      name: Deep Learning
      params_grid:
          distribution: [bernoulli]
  gbm: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.gbm.H2OGradientBoostingEstimator ''
      name: Gradient Boosting
      params_grid:
          ntrees: [50]
          distribution: [bernoulli]
  glm: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.glm.H2OGeneralizedLinearEstimator ''
      name: Generalized Linear Model
      params_grid: 
          family: [binomial]
  drf: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.random_forest.H2ORandomForestEstimator ''
      name: Distributed Random Forest
      params_grid:
          ntrees: [50]
  fg: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.fakegame.H2OFakeGameEstimator ''
      name: FakeGame
      params_grid:
          model_config: ['<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>BackPropagation classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.BackPropagationModelConfig> <classRef>game.models.single.neural.BackPropagationModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <firstLayerNeurons>5</firstLayerNeurons> <secondLayerNeurons>0</secondLayerNeurons> <trainingCycles>600</trainingCycles> <acceptableError>0.0</acceptableError> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> </elements> <elementEnabled> <boolean>true</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> <learningRate>0.2</learningRate> <momentum>0.3</momentum> </configuration.models.single.neural.BackPropagationModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>QuickProp classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.QuickpropModelConfig> <classRef>game.models.single.neural.QuickpropModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <firstLayerNeurons>5</firstLayerNeurons> <secondLayerNeurons>0</secondLayerNeurons> <trainingCycles>600</trainingCycles> <acceptableError>0.0</acceptableError> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> <string>symmetric_sigmoid</string> </elements> <elementEnabled> <boolean>true</boolean> <boolean>false</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> <maxGrowthFactor>2.0</maxGrowthFactor> <epsilon>7.0E-4</epsilon> <splitEpsilon>false</splitEpsilon> </configuration.models.single.neural.QuickpropModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Rprop classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.RpropModelConfig> <classRef>game.models.single.neural.RpropModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <firstLayerNeurons>5</firstLayerNeurons> <secondLayerNeurons>0</secondLayerNeurons> <trainingCycles>600</trainingCycles> <acceptableError>0.0</acceptableError> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> <string>symmetric_sigmoid</string> </elements> <elementEnabled> <boolean>true</boolean> <boolean>false</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> <etaMinus>0.5</etaMinus> <etaPlus>1.2</etaPlus> </configuration.models.single.neural.RpropModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>'           ,           '<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Cascade Correlation classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.CascadeCorrelationModelConfig> <classRef>game.models.single.neural.CascadeCorrelationModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <acceptableError>0.001</acceptableError> <maxLayersNumber>5</maxLayersNumber> <candNumber>1</candNumber> <usedAlg> <elements class="string-array"> <string>Quickprop</string> <string>Rprop</string> </elements> <elementEnabled> <boolean>false</boolean> <boolean>true</boolean> </elementEnabled> </usedAlg> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> <string>symmetric_sigmoid</string> </elements> <elementEnabled> <boolean>false</boolean> <boolean>true</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> </configuration.models.single.neural.CascadeCorrelationModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Exponencial classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.ExpModelConfig> <classRef>game.models.single.ExpModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.ExpModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Gaussian classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.GaussianModelConfig> <classRef>game.models.single.GaussianModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.GaussianModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Gaussian Multi classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.GaussianMultiModelConfig> <classRef>game.models.single.GaussianMultiModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.GaussianMultiModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Gaussian Norm classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.GaussianNormModelConfig> <classRef>game.models.single.GaussianNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.GaussianNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Linear classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.LinearModelConfig> <classRef>game.models.single.LinearModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> <retrainWhenLmsFails>false</retrainWhenLmsFails> </configuration.models.single.LinearModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Polynomial classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.PolynomialModelConfig> <classRef>game.models.single.PolynomialModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> <maxDegree>2</maxDegree> </configuration.models.single.PolynomialModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sigmoid classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SigmoidModelConfig> <classRef>game.models.single.SigmoidModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SigmoidModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sigmoid classifier (without scaling and shift coefficients)</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SigmoidNormModelConfig> <classRef>game.models.single.SigmoidNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SigmoidNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sigmoid Norm classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SigmoidNormModelConfig> <classRef>game.models.single.SigmoidNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SigmoidNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sine classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SineModelConfig> <classRef>game.models.single.SineModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SineModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sine without scaling and shift classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SineNormModelConfig> <classRef>game.models.single.SineNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SineNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sine Norm classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SineNormModelConfig> <classRef>game.models.single.SineNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SineNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>']
subsets:
  min_fraction_denom: 1
  max_fraction_denom: 1000
  number_of_samples: 20
train_ratio: 0.5
validation_ratio: 0.75
x: ["lepton pT", "lepton eta", "lepton phi", "missing energy magnitude", "missing energy phi", "jet 1 pt", "jet 1 eta", "jet 1 phi", "jet 1 b-tag", "jet 2 pt", "jet 2 eta", "jet 2 phi", "jet 2 b-tag", "jet 3 pt", "jet 3 eta", "jet 3 phi", "jet 3 b-tag", "jet 4 pt", "jet 4 eta", "jet 4 phi", "jet 4 b-tag", "m_jj", "m_jjj", "m_lv", "m_jlv", "m_bb", "m_wbb", "m_wwbb"]
y: "class"
