!<Experiment>
name: Airlines-100k-glob
filename: /home/ubuntu/frydatom-vylet-2016/data/airlines_imputed_100k.csv
models:
  deeplearning: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.deeplearning.H2ODeepLearningEstimator ''
      name: Deep Learning
      params_grid:
          activation: [Rectifier]
          adaptive_rate: [true]
          balance_classes: [true]
          elastic_averaging_moving_rate: [0.9]
          elastic_averaging_regularization: [0.001]
          epochs: [10.0]
          epsilon: [1.0e-08]
          fast_mode: [true]
          hidden: [200, 200]
          initial_weight_distribution: [UniformAdaptive]
          initial_weight_scale: [1.0]
          input_dropout_ratio: [0.0]
          l1: [0.0]
          l2: [0.0]
          loss: [Automatic]
          max_after_balance_size: [5.0]
          mini_batch_size: [1]
          momentum_ramp: [1000000.0]
          momentum_stable: [0.0]
          momentum_start: [0.0]
          nesterov_accelerated_gradient: [true]
          overwrite_with_best_model: [true]
          quantile_alpha: [0.5]
          rate: [0.005]
          rate_annealing: [1.0e-06]
          rate_decay: [1.0]
          rho: [0.99]
          shuffle_training_data: [true]
          sparse: [true]
          standardize: [true]
          stopping_metric: [AUTO]
          stopping_rounds: [5]
          stopping_tolerance: [0.0]
          tweedie_power: [1.5]
          use_all_factor_levels: [true]
  gbm: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.gbm.H2OGradientBoostingEstimator ''
      name: Gradient Boosting
      params_grid:
          balance_classes: [true]                                                                                                            
          col_sample_rate: [0.6204129381219047]
          col_sample_rate_change_per_level: [0.034796575377357586]
          col_sample_rate_per_tree: [0.3193110950990775]
          histogram_type: [Random]                                                                                                           
          learn_rate: [0.006819123824315465]
          learn_rate_annealing: [0.9633196932812048]
          max_after_balance_size: [5.255037735902959]
          max_depth: [32]
          min_rows: [17.679045726480435]
          min_split_improvement: [0.0023837300421530087]
          nbins: [145]
          nbins_cats: [2214]
          nbins_top_level: [7575]
          ntrees: [245]
          quantile_alpha: [0.9862877521188335]
          r2_stopping: [0.9832566597283046]
          sample_rate: [0.8834115382669031]
          stopping_metric: [mean_per_class_error]
          stopping_rounds: [0]
          stopping_tolerance: [0.027371253688886685]
          tweedie_power: [1.6232873800825085]


  glm: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.glm.H2OGeneralizedLinearEstimator ''
      name: Generalized Linear Model
      params_grid: 
          alpha: [0.36120824218437986]
          balance_classes: [true]                                                                                                                                                                                                                                                      
          beta_epsilon: [0.0008501259390932385]
          early_stopping: [true]                                                                                                                                                                                                                                                       
          family: [binomial]                                                                                                                                                                                                                                                           
          lambda_: [0.0015714339559291801]
          lambda_min_ratio: [0.10577377591291537]
          lambda_search: [true]                                                                                                              
          max_active_predictors: [96]
          max_after_balance_size: [2.4298480455531677]
          max_iterations: [717]
          nlambdas: [8]
          non_negative: [true]                                                                                                               
          prior: [0.014153394898949623]
          solver: [COORDINATE_DESCENT_NAIVE]                                                                                                 
          standardize: [true]                                                                                                                
          tweedie_link_power: [1.2705378764341257]
          tweedie_variance_power: [0.006409427813780025]
  drf: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.random_forest.H2ORandomForestEstimator ''
      name: Distributed Random Forest
      params_grid:
          balance_classes: [true]                                                                                                            
          binomial_double_trees: [true]                                                                                                      
          col_sample_rate_change_per_level: [0.7462814392801529]
          col_sample_rate_per_tree: [0.9482098735126094]
          histogram_type: [UniformAdaptive]                                                                                                  
          max_after_balance_size: [4.328468770995524]
          max_depth: [14]
          min_rows: [1.0841838076570502]
          min_split_improvement: [0.0018417100151861502]
          nbins: [117]
          nbins_cats: [7735]
          nbins_top_level: [6068]
          ntrees: [22]
          r2_stopping: [0.9657204458249721]
          sample_rate: [0.8397092615694302]
          stopping_metric: [MSE]                                                                                                             
          stopping_rounds: [4]
          stopping_tolerance: 0.03457946468119443    
          balance_classes: [true]                                                                                                            
          binomial_double_trees: [true]                                                                                                      
          col_sample_rate_change_per_level: [0.7462814392801529]
          col_sample_rate_per_tree: [0.9482098735126094]
          histogram_type: [UniformAdaptive]                                                                                                  
          max_after_balance_size: [4.328468770995524]
          max_depth: [14]
          min_rows: [1.0841838076570502]
          min_split_improvement: [0.0018417100151861502]
          nbins: [117]
          nbins_cats: [7735]
          nbins_top_level: [6068]
          ntrees: [22]
          r2_stopping: [0.9657204458249721]
          sample_rate: [0.8397092615694302]
          stopping_metric: [MSE]                                                                                                             
          stopping_rounds: [4]
          stopping_tolerance: [0.03457946468119443]
  fg: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.fakegame.H2OFakeGameEstimator ''
      name: FakeGame
      params_grid:
          model_config: ['<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>BackPropagation classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.BackPropagationModelConfig><classRef>game.models.single.neural.BackPropagationModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><firstLayerNeurons>20</firstLayerNeurons><secondLayerNeurons>0</secondLayerNeurons><trainingCycles>998</trainingCycles><acceptableError>0.0687502440671</acceptableError><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string></elements><elementEnabled><boolean>false</boolean><boolean>true</boolean></elementEnabled></activationFunction><learningRate>0.680712337867</learningRate><momentum>0.748499056884</momentum></configuration.models.single.neural.BackPropagationModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>', '<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>Cascade Correlation classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.CascadeCorrelationModelConfig><classRef>game.models.single.neural.CascadeCorrelationModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><acceptableError>0.152889286659</acceptableError><maxLayersNumber>5</maxLayersNumber><candNumber>5</candNumber><usedAlg><elements class="string-array"><string>Quickprop</string><string>Rprop</string></elements><elementEnabled><boolean>false</boolean><boolean>true</boolean></elementEnabled></usedAlg><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string><string>symmetric_sigmoid</string></elements><elementEnabled><boolean>false</boolean><boolean>false</boolean><boolean>true</boolean></elementEnabled></activationFunction></configuration.models.single.neural.CascadeCorrelationModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>', '<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>Rprop classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.RpropModelConfig><classRef>game.models.single.neural.RpropModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><firstLayerNeurons>3</firstLayerNeurons><secondLayerNeurons>0</secondLayerNeurons><trainingCycles>600</trainingCycles><acceptableError>0.0</acceptableError><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string><string>symmetric_sigmoid</string></elements><elementEnabled><boolean>true</boolean><boolean>false</boolean><boolean>false</boolean></elementEnabled></activationFunction><etaMinus>0.5</etaMinus><etaPlus>1.2</etaPlus></configuration.models.single.neural.RpropModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>', '<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>QuickProp classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.QuickpropModelConfig><classRef>game.models.single.neural.QuickpropModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><firstLayerNeurons>5</firstLayerNeurons><secondLayerNeurons>0</secondLayerNeurons><trainingCycles>600</trainingCycles><acceptableError>0.0</acceptableError><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string><string>symmetric_sigmoid</string></elements><elementEnabled><boolean>true</boolean><boolean>false</boolean><boolean>false</boolean></elementEnabled></activationFunction><maxGrowthFactor>2.0</maxGrowthFactor><epsilon>0.0007</epsilon><splitEpsilon>True</splitEpsilon></configuration.models.single.neural.QuickpropModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>']




subsets:
  min_fraction_denom: 1
  max_fraction_denom: 1000
  number_of_samples: 20
train_ratio: 0.5
validation_ratio: 0.75
x: ["Year","Month","DayofMonth","DayOfWeek","DepTime","CRSDepTime","ArrTime","CRSArrTime","UniqueCarrier","FlightNum","TailNum","Origin","Dest","Distance","TaxiIn"]
y: "IsDepDelayed"

