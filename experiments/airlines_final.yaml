!<Experiment>
name: Airlines-final
filename: /home/ubuntu/frydatom-vylet-2016/data/airlines_imputed_1M.csv
models:
  ens: !<SLModelConfig>
      name: H2O Ensemble
      params_grid:
          family: [binomial]
  deeplearning: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.deeplearning.H2ODeepLearningEstimator ''
      name: Deep Learning
      params_grid:
          distribution: [bernoulli]
  dl_opt: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.deeplearning.H2ODeepLearningEstimator ''
      name: Deep Learning (optimized)
      params_grid:
        activation: [Rectifier]
        adaptive_rate: [true]
        balance_classes: [true]
        elastic_averaging_moving_rate: [0.9]
        elastic_averaging_regularization: [0.001]
        epochs: [10.0]
        epsilon: [1.0e-08]
        fast_mode: [true]
        hidden: [[200, 200]]
        initial_weight_distribution: [UniformAdaptive]
        initial_weight_scale: [1.0]
        input_dropout_ratio: [0.0]
        l1: [0.0]
        l2: [0.0]
        loss: [Automatic]
        max_after_balance_size: [5.0]
        mini_batch_size: [1]
        momentum_ramp: [1000000.0]
        momentum_stable: [0.0]
        momentum_start: [0.0]
        nesterov_accelerated_gradient: [true]
        overwrite_with_best_model: [true]
        quantile_alpha: [0.5]
        rate: [0.005]
        rate_annealing: [1.0e-06]
        rate_decay: [1.0]
        rho: [0.99]
        shuffle_training_data: [true]
        sparse: [true]
        standardize: [true]
        stopping_metric: [AUTO]
        stopping_rounds: [5]
        stopping_tolerance: [0.0]
        tweedie_power: [1.5]
        use_all_factor_levels: [true]
  gbm: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.gbm.H2OGradientBoostingEstimator ''
      name: Gradient Boosting
      params_grid:
          distribution: [bernoulli]
  gbm_opt: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.gbm.H2OGradientBoostingEstimator ''
      name: Gradient Boosting (optimized)
      params_grid:
        balance_classes: [true]
        col_sample_rate: [1.0]
        col_sample_rate_change_per_level: [1.0]
        col_sample_rate_per_tree: [1.0]
        histogram_type: [AUTO]
        learn_rate: [0.1]
        learn_rate_annealing: [1.0]
        max_after_balance_size: [5.0]
        max_depth: [12]
        min_rows: [10.0]
        min_split_improvement: [1.0e-05]
        nbins: [20]
        nbins_cats: [1024]
        nbins_top_level: [1024]
        ntrees: [50]
        quantile_alpha: [0.5]
        r2_stopping: [0.999999]
        sample_rate: [1.0]
        stopping_metric: [AUTO]
        stopping_rounds: [0]
        stopping_tolerance: [0.001]
        tweedie_power: [1.5]
  glm: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.glm.H2OGeneralizedLinearEstimator ''
      name: Generalized Linear Model
      params_grid: 
          family: [binomial]
  glm_opt: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.glm.H2OGeneralizedLinearEstimator ''
      name: Generalized Linear Model (optimized)
      params_grid:
        alpha: [0.5]
        balance_classes: [true]
        beta_epsilon: [0.0001]
        early_stopping: [true]
        family: [binomial]
        lambda_: [0.0]
        lambda_min_ratio: [-1.0]
        lambda_search: [true]
        max_active_predictors: [-1]
        max_after_balance_size: [5.0]
        max_iterations: [-1]
        nlambdas: [-1]
        non_negative: [true]
        prior: [-1.0]
        solver: [AUTO]
        standardize: [true]
        tweedie_link_power: [1.0]
        tweedie_variance_power: [0.0]
  drf: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.random_forest.H2ORandomForestEstimator ''
      name: Distributed Random Forest
      params_grid: {}
  drf_opt: !<ModelConfig>
      base_model:  !!python/name:h2o.estimators.random_forest.H2ORandomForestEstimator ''
      name: Distributed Random Forest (optimized)
      params_grid:
        balance_classes: [true]
        binomial_double_trees: [true]
        col_sample_rate_change_per_level: [1.671069359375247]
        col_sample_rate_per_tree: [0.5244154102858287]
        histogram_type: [UniformAdaptive]
        max_after_balance_size: [0.9313822212592724]
        max_depth: [162]
        min_rows: [66.73136925017744]
        min_split_improvement: [0.0002078782517407979]
        nbins: [193]
        nbins_cats: [580]
        nbins_top_level: [6494]
        ntrees: [300]
        r2_stopping: [0.9841741016051299]
        sample_rate: [0.6995956863368619]
        stopping_metric: [MSE]
        stopping_rounds: [0]
        stopping_tolerance: [0.05124176293019856]
  fg: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.fakegame.H2OFakeGameEstimator ''
      name: FakeGame
      params_grid:
          model_config: ['<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>BackPropagation classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.BackPropagationModelConfig> <classRef>game.models.single.neural.BackPropagationModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <firstLayerNeurons>5</firstLayerNeurons> <secondLayerNeurons>0</secondLayerNeurons> <trainingCycles>600</trainingCycles> <acceptableError>0.0</acceptableError> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> </elements> <elementEnabled> <boolean>true</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> <learningRate>0.2</learningRate> <momentum>0.3</momentum> </configuration.models.single.neural.BackPropagationModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>QuickProp classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.QuickpropModelConfig> <classRef>game.models.single.neural.QuickpropModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <firstLayerNeurons>5</firstLayerNeurons> <secondLayerNeurons>0</secondLayerNeurons> <trainingCycles>600</trainingCycles> <acceptableError>0.0</acceptableError> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> <string>symmetric_sigmoid</string> </elements> <elementEnabled> <boolean>true</boolean> <boolean>false</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> <maxGrowthFactor>2.0</maxGrowthFactor> <epsilon>7.0E-4</epsilon> <splitEpsilon>false</splitEpsilon> </configuration.models.single.neural.QuickpropModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Rprop classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.RpropModelConfig> <classRef>game.models.single.neural.RpropModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <firstLayerNeurons>5</firstLayerNeurons> <secondLayerNeurons>0</secondLayerNeurons> <trainingCycles>600</trainingCycles> <acceptableError>0.0</acceptableError> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> <string>symmetric_sigmoid</string> </elements> <elementEnabled> <boolean>true</boolean> <boolean>false</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> <etaMinus>0.5</etaMinus> <etaPlus>1.2</etaPlus> </configuration.models.single.neural.RpropModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>'           ,           '<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Cascade Correlation classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.neural.CascadeCorrelationModelConfig> <classRef>game.models.single.neural.CascadeCorrelationModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <acceptableError>0.001</acceptableError> <maxLayersNumber>5</maxLayersNumber> <candNumber>1</candNumber> <usedAlg> <elements class="string-array"> <string>Quickprop</string> <string>Rprop</string> </elements> <elementEnabled> <boolean>false</boolean> <boolean>true</boolean> </elementEnabled> </usedAlg> <activationFunction> <elements class="string-array"> <string>sigmoid</string> <string>sigmoid_offset</string> <string>symmetric_sigmoid</string> </elements> <elementEnabled> <boolean>false</boolean> <boolean>true</boolean> <boolean>false</boolean> </elementEnabled> </activationFunction> </configuration.models.single.neural.CascadeCorrelationModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Exponencial classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.ExpModelConfig> <classRef>game.models.single.ExpModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.ExpModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Gaussian classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.GaussianModelConfig> <classRef>game.models.single.GaussianModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.GaussianModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Gaussian Multi classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.GaussianMultiModelConfig> <classRef>game.models.single.GaussianMultiModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.GaussianMultiModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Gaussian Norm classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.GaussianNormModelConfig> <classRef>game.models.single.GaussianNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.GaussianNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Linear classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.LinearModelConfig> <classRef>game.models.single.LinearModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> <retrainWhenLmsFails>false</retrainWhenLmsFails> </configuration.models.single.LinearModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Polynomial classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.PolynomialModelConfig> <classRef>game.models.single.PolynomialModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> <maxDegree>2</maxDegree> </configuration.models.single.PolynomialModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sigmoid classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SigmoidModelConfig> <classRef>game.models.single.SigmoidModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SigmoidModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sigmoid classifier (without scaling and shift coefficients)</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SigmoidNormModelConfig> <classRef>game.models.single.SigmoidNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SigmoidNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sigmoid Norm classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SigmoidNormModelConfig> <classRef>game.models.single.SigmoidNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SigmoidNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sine classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SineModelConfig> <classRef>game.models.single.SineModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SineModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sine without scaling and shift classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SineNormModelConfig> <classRef>game.models.single.SineNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SineNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>','<configuration.classifiers.single.ClassifierModelConfig> <classRef>game.classifiers.single.ClassifierModel</classRef> <description>Sine Norm classifier</description> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <baseModelsDef>UNIFORM</baseModelsDef> <baseModelCfgs> <configuration.models.single.SineNormModelConfig> <classRef>game.models.single.SineNormModel</classRef> <maxLearningVectors>-1</maxLearningVectors> <maxInputsNumber>-1</maxInputsNumber> <trainerClassName>QuasiNewtonTrainer</trainerClassName> <trainerCfg class="configuration.game.trainers.QuasiNewtonConfig"> <rec>10</rec> <draw>10</draw> <forceAnalyticHessian>false</forceAnalyticHessian> </trainerCfg> <validationPercent>30</validationPercent> <validationEnabled>true</validationEnabled> </configuration.models.single.SineNormModelConfig> </baseModelCfgs> </configuration.classifiers.single.ClassifierModelConfig>']
  fg_opt: !<ModelConfig>
      base_model: !!python/name:h2o.estimators.fakegame.H2OFakeGameEstimator ''
      name: FakeGame (optimized)
      params_grid:
          model_config: ['<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>BackPropagation classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.BackPropagationModelConfig><classRef>game.models.single.neural.BackPropagationModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><firstLayerNeurons>5</firstLayerNeurons><secondLayerNeurons>0</secondLayerNeurons><trainingCycles>600</trainingCycles><acceptableError>0.0</acceptableError><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string></elements><elementEnabled><boolean>true</boolean><boolean>false</boolean></elementEnabled></activationFunction><learningRate>0.2</learningRate><momentum>0.3</momentum></configuration.models.single.neural.BackPropagationModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>', '<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>Cascade Correlation classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.CascadeCorrelationModelConfig><classRef>game.models.single.neural.CascadeCorrelationModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><acceptableError>0.109396785491</acceptableError><maxLayersNumber>7</maxLayersNumber><candNumber>4</candNumber><usedAlg><elements class="string-array"><string>Quickprop</string><string>Rprop</string></elements><elementEnabled><boolean>true</boolean><boolean>false</boolean></elementEnabled></usedAlg><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string><string>symmetric_sigmoid</string></elements><elementEnabled><boolean>false</boolean><boolean>true</boolean><boolean>false</boolean></elementEnabled></activationFunction></configuration.models.single.neural.CascadeCorrelationModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>', '<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>Rprop classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.RpropModelConfig><classRef>game.models.single.neural.RpropModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><firstLayerNeurons>5</firstLayerNeurons><secondLayerNeurons>0</secondLayerNeurons><trainingCycles>600</trainingCycles><acceptableError>0.0</acceptableError><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string><string>symmetric_sigmoid</string></elements><elementEnabled><boolean>true</boolean><boolean>false</boolean><boolean>false</boolean></elementEnabled></activationFunction><etaMinus>0.5</etaMinus><etaPlus>1.2</etaPlus></configuration.models.single.neural.RpropModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>', '<configuration.classifiers.single.ClassifierModelConfig><classRef>game.classifiers.single.ClassifierModel</classRef><description>QuickProp classifier</description><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><baseModelsDef>UNIFORM</baseModelsDef><baseModelCfgs><configuration.models.single.neural.QuickpropModelConfig><classRef>game.models.single.neural.QuickpropModel</classRef><maxLearningVectors>-1</maxLearningVectors><maxInputsNumber>-1</maxInputsNumber><firstLayerNeurons>5</firstLayerNeurons><secondLayerNeurons>0</secondLayerNeurons><trainingCycles>600</trainingCycles><acceptableError>0.0</acceptableError><activationFunction><elements class="string-array"><string>sigmoid</string><string>sigmoid_offset</string><string>symmetric_sigmoid</string></elements><elementEnabled><boolean>true</boolean><boolean>false</boolean><boolean>false</boolean></elementEnabled></activationFunction><maxGrowthFactor>2.0</maxGrowthFactor><epsilon>0.0007</epsilon><splitEpsilon>True</splitEpsilon></configuration.models.single.neural.QuickpropModelConfig></baseModelCfgs></configuration.classifiers.single.ClassifierModelConfig>']

subsets:
  min_fraction_denom: 1
  max_fraction_denom: 500
  number_of_samples: 20
train_ratio: 0.4
validation_ratio: 0.5
x: ["Year","Month","DayofMonth","DayOfWeek","DepTime","CRSDepTime","ArrTime","CRSArrTime","UniqueCarrier","FlightNum","TailNum","Origin","Dest","Distance","TaxiIn"]
y: "IsDepDelayed"

